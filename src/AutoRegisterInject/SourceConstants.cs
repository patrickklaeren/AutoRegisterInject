namespace AutoRegisterInject;

internal sealed class SourceConstants
{
    internal const string GENERATE_ATTRIBUTE_SOURCE = @"// <auto-generated>
//     Automatically generated by AutoRegisterInject.
//     Changes made to this file may be lost and may cause undesirable behaviour.
// </auto-generated>
#if !AUTOREGISTERINJECT_EXCLUDE_ATTRIBUTES
[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class RegisterScopedAttribute : System.Attribute
{ 
    internal RegisterScopedAttribute(params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class RegisterKeyedScopedAttribute : System.Attribute
{ 
    internal RegisterKeyedScopedAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class TryRegisterScopedAttribute : System.Attribute
{ 
    internal TryRegisterScopedAttribute(params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class TryRegisterKeyedScopedAttribute : System.Attribute
{ 
    internal TryRegisterKeyedScopedAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class RegisterSingletonAttribute : System.Attribute
{ 
    internal RegisterSingletonAttribute(params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class RegisterKeyedSingletonAttribute : System.Attribute
{ 
    internal RegisterKeyedSingletonAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class TryRegisterSingletonAttribute : System.Attribute
{ 
    internal TryRegisterSingletonAttribute(params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class TryRegisterKeyedSingletonAttribute : System.Attribute
{ 
    internal TryRegisterKeyedSingletonAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class RegisterTransientAttribute : System.Attribute
{ 
    internal RegisterTransientAttribute(params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class RegisterKeyedTransientAttribute : System.Attribute
{ 
    internal RegisterKeyedTransientAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class TryRegisterTransientAttribute : System.Attribute
{ 
    internal TryRegisterTransientAttribute(params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class TryRegisterKeyedTransientAttribute : System.Attribute
{ 
    internal TryRegisterKeyedTransientAttribute(string serviceKey, params System.Type[] onlyRegisterAs) { }
}

[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]
internal sealed class RegisterHostedServiceAttribute : System.Attribute { }
#endif";

    internal static string GENERATE_SCOPED_SOURCE = "serviceCollection.AddScoped<{0}>();";
    internal static string GENERATE_SCOPED_INTERFACE_SOURCE = "serviceCollection.AddScoped<{0}, {1}>();";
    internal static string GENERATE_KEYED_SCOPED_SOURCE = @"serviceCollection.AddKeyedScoped<{0}>(""{1}"");";
    internal static string GENERATE_KEYED_SCOPED_INTERFACE_SOURCE = @"serviceCollection.AddKeyedScoped<{0}, {1}>(""{2}"");";
    
    internal static string GENERATE_TRY_SCOPED_SOURCE = "serviceCollection.TryAddScoped<{0}>();";
    internal static string GENERATE_TRY_SCOPED_INTERFACE_SOURCE = "serviceCollection.TryAddScoped<{0}, {1}>();";
    internal static string GENERATE_TRY_KEYED_SCOPED_SOURCE = @"serviceCollection.TryAddKeyedScoped<{0}>(""{1}"");";
    internal static string GENERATE_TRY_KEYED_SCOPED_INTERFACE_SOURCE = @"serviceCollection.TryAddKeyedScoped<{0}, {1}>(""{2}"");";
    
    internal static string GENERATE_SINGLETON_SOURCE = "serviceCollection.AddSingleton<{0}>();";
    internal static string GENERATE_SINGLETON_INTERFACE_SOURCE = "serviceCollection.AddSingleton<{0}, {1}>();";
    internal static string GENERATE_KEYED_SINGLETON_SOURCE = @"serviceCollection.AddKeyedSingleton<{0}>(""{1}"");";
    internal static string GENERATE_KEYED_SINGLETON_INTERFACE_SOURCE = @"serviceCollection.AddKeyedSingleton<{0}, {1}>(""{2}"");";
    
    internal static string GENERATE_TRY_SINGLETON_SOURCE = "serviceCollection.TryAddSingleton<{0}>();";
    internal static string GENERATE_TRY_SINGLETON_INTERFACE_SOURCE = "serviceCollection.TryAddSingleton<{0}, {1}>();";
    internal static string GENERATE_TRY_KEYED_SINGLETON_SOURCE = @"serviceCollection.TryAddKeyedSingleton<{0}>(""{1}"");";
    internal static string GENERATE_TRY_KEYED_SINGLETON_INTERFACE_SOURCE = @"serviceCollection.TryAddKeyedSingleton<{0}, {1}>(""{2}"");";
    
    internal static string GENERATE_TRANSIENT_SOURCE = "serviceCollection.AddTransient<{0}>();";
    internal static string GENERATE_TRANSIENT_INTERFACE_SOURCE = "serviceCollection.AddTransient<{0}, {1}>();";
    internal static string GENERATE_KEYED_TRANSIENT_SOURCE = @"serviceCollection.AddKeyedTransient<{0}>(""{1}"");";
    internal static string GENERATE_KEYED_TRANSIENT_INTERFACE_SOURCE = @"serviceCollection.AddKeyedTransient<{0}, {1}>(""{2}"");";
    
    internal static string GENERATE_TRY_TRANSIENT_SOURCE = "serviceCollection.TryAddTransient<{0}>();";
    internal static string GENERATE_TRY_TRANSIENT_INTERFACE_SOURCE = "serviceCollection.TryAddTransient<{0}, {1}>();";
    internal static string GENERATE_TRY_KEYED_TRANSIENT_SOURCE = @"serviceCollection.TryAddKeyedTransient<{0}>(""{1}"");";
    internal static string GENERATE_TRY_KEYED_TRANSIENT_INTERFACE_SOURCE = @"serviceCollection.TryAddKeyedTransient<{0}, {1}>(""{2}"");";
    
    internal static string GENERATE_HOSTED_SERVICE_SOURCE = "serviceCollection.AddHostedService<{0}>();";

    internal const string GENERATE_CLASS_SOURCE = @"// <auto-generated>
//     Automatically generated by AutoRegisterInject.
//     Changes made to this file may be lost and may cause undesirable behaviour.
// </auto-generated>
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.DependencyInjection.Extensions;

/// <summary>
/// AutoRegisterInject service collection extensions  
/// </summary>
public static class AutoRegisterInjectServiceCollectionExtension
{
    /// <summary>
    /// Adds all types registered with AutoRegisterInject attributes to the given
    /// service collection from the named assembly
    /// </summary>
    /// <param name=""serviceCollection"">Service collection to register types with</param>
    /// <returns>Service collection with registered types</returns>
    public static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegisterFrom{0}(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
    {
        return AutoRegister(serviceCollection);
    }

    /// <summary>
    /// Adds all types registered with AutoRegisterInject attributes to the given
    /// service collection
    /// </summary>
    /// <param name=""serviceCollection"">Service collection to register types with</param>
    /// <returns>Service collection with registered types</returns>
    internal static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegister(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
    {
        {1}
        return serviceCollection;
    }
}";
}